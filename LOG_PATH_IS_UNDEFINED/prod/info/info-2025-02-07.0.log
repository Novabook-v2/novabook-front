[2025-02-07 15:08:16:534 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:08:16:555 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 57177 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:08:16:555 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:08:16:573 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:08:16:573 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:08:17:1018] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:08:17:1018] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:08:17:1028] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:08:17:1222] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:08:17:1223] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:08:17:1315] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 91 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:08:17:1469] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:08:17:1841] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:08:17:1847] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:08:17:1848] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:08:17:1848] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:08:17:1869] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:08:17:1870] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1296 ms 
[2025-02-07 15:08:18:2086] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:08:18:2116] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2149] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2164] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2176] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2191] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2210] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2226] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2237] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2248] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2260] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2271] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2281] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2292] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:08:18:2303] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Stopping service [Tomcat] 
[2025-02-07 15:08:18:2314] [restartedMain] INFO  [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logMessage:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. 
[2025-02-07 15:09:46:518 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:09:46:532 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 57578 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:09:46:532 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:09:46:551 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:09:46:552 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:09:47:994 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:09:47:994 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:09:47:1003] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:09:47:1198] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:09:47:1198] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:09:47:1287] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 88 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:09:47:1439] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:09:48:1808] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:09:48:1814] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:09:48:1814] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:09:48:1814] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:09:48:1836] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:09:48:1836] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1284 ms 
[2025-02-07 15:09:48:2049] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:09:48:2079] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2113] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2129] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2143] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2158] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2176] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2191] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2202] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2214] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2225] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2235] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2245] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2256] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:09:48:2265] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Stopping service [Tomcat] 
[2025-02-07 15:09:48:2274] [restartedMain] INFO  [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logMessage:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. 
[2025-02-07 15:12:08:510 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:12:08:525 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 58189 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:12:08:525 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:12:08:543 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:12:08:543 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:12:09:992 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:12:09:993 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:12:09:1002] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:12:09:1195] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:12:09:1195] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:12:09:1286] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 90 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:12:09:1439] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:12:10:1802] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:12:10:1809] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:12:10:1810] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:12:10:1810] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:12:10:1831] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:12:10:1831] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1287 ms 
[2025-02-07 15:12:10:2071] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:12:10:2105] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2143] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2161] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2178] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2191] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2204] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2219] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2232] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2243] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2254] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2264] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2274] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2287] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:10:2299] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Stopping service [Tomcat] 
[2025-02-07 15:12:10:2309] [restartedMain] INFO  [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logMessage:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. 
[2025-02-07 15:12:28:500 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:12:28:515 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 58282 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:12:28:516 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:12:28:533 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:12:28:533 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:12:28:973 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:12:28:973 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:12:28:983 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:12:29:1184] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:12:29:1184] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:12:29:1282] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 97 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:12:29:1436] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:12:29:1799] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:12:29:1806] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:12:29:1807] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:12:29:1807] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:12:29:1828] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:12:29:1828] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1295 ms 
[2025-02-07 15:12:29:2049] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:12:29:2083] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:29:2116] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2132] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2144] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2156] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2174] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2206] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2219] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2229] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2240] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2251] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2262] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2273] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2348] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:30:2364] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Stopping service [Tomcat] 
[2025-02-07 15:12:30:2373] [restartedMain] INFO  [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logMessage:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. 
[2025-02-07 15:12:45:529 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:12:45:545 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 58352 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:12:45:545 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:12:45:563 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:12:45:563 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:12:46:1002] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:12:46:1002] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:12:46:1013] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 3 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:12:46:1222] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:12:46:1222] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:12:46:1311] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 88 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:12:46:1465] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:12:47:1829] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:12:47:1835] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:12:47:1836] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:12:47:1836] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:12:47:1857] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:12:47:1857] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1294 ms 
[2025-02-07 15:12:47:2081] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:12:47:2112] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2146] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2162] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2176] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2192] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2212] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2228] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2240] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2250] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2261] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2272] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2282] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2293] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:47:2359] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:2627] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:2639] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:2650] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:2669] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:2680] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:2691] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:2701] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:12:48:3005] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Stopping service [Tomcat] 
[2025-02-07 15:12:48:3017] [restartedMain] INFO  [org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger.logMessage:82] - 

Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled. 
[2025-02-07 15:13:00:524 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:13:00:539 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 58418 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:13:00:539 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:13:00:557 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:13:00:558 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:13:00:1033] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:13:00:1033] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:13:00:1044] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:13:00:1249] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:13:00:1249] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:13:00:1343] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 93 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:13:01:1498] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:13:01:1881] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:13:01:1887] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:13:01:1888] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:13:01:1888] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:13:01:1909] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:13:01:1909] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1349 ms 
[2025-02-07 15:13:01:2124] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:13:01:2156] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2193] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2214] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2227] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2239] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2252] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2267] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2278] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2289] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2300] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2311] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2321] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:01:2333] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2395] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2674] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2689] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2702] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2717] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2728] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2738] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2749] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2956] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:02:2987] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:13:03:3523] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs:76] - Eureka HTTP Client uses RestTemplate. 
[2025-02-07 15:13:03:3555] [restartedMain] INFO  [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>:60] - Exposing 2 endpoints beneath base path '/actuator' 
[2025-02-07 15:13:03:3602] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create:67] - Setting initial instance status as: STARTING 
[2025-02-07 15:13:03:3619] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:327] - Initializing Eureka in region us-east-1 
[2025-02-07 15:13:03:3621] [restartedMain] INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] - Resolving eureka endpoints via configuration 
[2025-02-07 15:13:03:3632] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:951] - Disable delta property : false 
[2025-02-07 15:13:03:3632] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:952] - Single vip registry refresh property : null 
[2025-02-07 15:13:03:3632] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:953] - Force full registry fetch : false 
[2025-02-07 15:13:03:3632] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:954] - Application is null : false 
[2025-02-07 15:13:03:3632] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:955] - Registered Applications size is zero : true 
[2025-02-07 15:13:03:3632] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:957] - Application version is -1: true 
[2025-02-07 15:13:03:3632] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1041] - Getting all instance registry info from the eureka server 
[2025-02-07 15:13:03:3745] [restartedMain] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on GET request for "http://novabook-eureka-service:8761/eureka/apps/": novabook-eureka-service: nodename nor servname provided, or not known stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://novabook-eureka-service:8761/eureka/apps/": novabook-eureka-service: nodename nor servname provided, or not known
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at store.novabook.front.NovabookFrontApplication.main(NovabookFrontApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.net.UnknownHostException: novabook-eureka-service: nodename nor servname provided, or not known
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 65 more
 
[2025-02-07 15:13:03:3746] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:965] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at store.novabook.front.NovabookFrontApplication.main(NovabookFrontApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
 
[2025-02-07 15:13:03:3746] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:398] - Initial registry fetch from primary servers failed 
[2025-02-07 15:13:03:3746] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:403] - Initial registry fetch from backup servers failed 
[2025-02-07 15:13:03:3747] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1265] - Starting heartbeat executor: renew interval is: 30 
[2025-02-07 15:13:03:3747] [restartedMain] INFO  [com.netflix.discovery.InstanceInfoReplicator.<init>:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4 
[2025-02-07 15:13:03:3749] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:447] - Discovery Client initialized at timestamp 1738908783398 with initial instances count: 0 
[2025-02-07 15:13:03:3752] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register:70] - Registering application NOVABOOK_FRONT with eureka with status UP 
[2025-02-07 15:13:03:3752] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient$3.notify:1296] - Saw local status change event StatusChangeEvent [timestamp=1738908783401, current=UP, previous=STARTING] 
[2025-02-07 15:13:03:3753] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient.register:817] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front: registering service... 
[2025-02-07 15:13:03:3753] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:13:03:3757] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start:243] - Tomcat started on port 8080 (http) with context path '/' 
[2025-02-07 15:13:03:3758] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:150] - Updating port to 8080 
[2025-02-07 15:13:03:3766] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more
 
[2025-02-07 15:13:03:3975] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarted:56] - Started NovabookFrontApplication in 3.849 seconds (process running for 4.303) 
[2025-02-07 15:13:04:4449] [RMI TCP Connection(3)-127.0.0.1] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2025-02-07 15:13:04:4449] [RMI TCP Connection(3)-127.0.0.1] INFO  [org.springframework.web.servlet.FrameworkServlet.initServletBean:532] - Initializing Servlet 'dispatcherServlet' 
[2025-02-07 15:13:04:4449] [RMI TCP Connection(2)-127.0.0.1] INFO  [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort:682] - Attempting to connect to: localhost:5672 
[2025-02-07 15:13:04:4451] [RMI TCP Connection(3)-127.0.0.1] INFO  [org.springframework.web.servlet.FrameworkServlet.initServletBean:554] - Completed initialization in 1 ms 
[2025-02-07 15:13:04:4480] [RMI TCP Connection(2)-127.0.0.1] INFO  [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection:608] - Created new connection: connectionFactory#4c42a2f6:0/SimpleConnection@48b62f4 [delegate=amqp://guest@127.0.0.1:5672/, localPort=62125] 
[2025-02-07 15:13:16:17031] [SpringApplicationShutdownHook] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister:91] - Unregistering application NOVABOOK_FRONT with eureka with status DOWN 
[2025-02-07 15:13:16:17031] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient$3.notify:1296] - Saw local status change event StatusChangeEvent [timestamp=1738908796680, current=DOWN, previous=UP] 
[2025-02-07 15:13:16:17031] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient.register:817] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front: registering service... 
[2025-02-07 15:13:16:17048] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service: nodename nor servname provided, or not known stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service: nodename nor servname provided, or not known
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service: nodename nor servname provided, or not known
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more
 
[2025-02-07 15:13:16:17182] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.shutdown:879] - Shutting down DiscoveryClient ... 
[2025-02-07 15:13:19:20189] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.unregister:915] - Unregistering ... 
[2025-02-07 15:13:19:20201] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on DELETE request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT/172.19.88.38:novabook_front": novabook-eureka-service stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT/172.19.88.38:novabook_front": novabook-eureka-service
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more
 
[2025-02-07 15:13:19:20207] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.shutdown:904] - Completed shut down of DiscoveryClient 
[2025-02-07 15:14:20:566 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:14:21:582 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 58825 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:14:21:582 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:14:21:600 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:14:21:600 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:14:21:1049] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:14:21:1050] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:14:21:1060] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:14:21:1266] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:14:21:1266] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:14:21:1362] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 95 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:14:21:1525] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:14:22:1888] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:14:22:1894] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:14:22:1895] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:14:22:1896] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:14:22:1917] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:14:22:1917] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1317 ms 
[2025-02-07 15:14:22:2146] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:14:22:2184] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2222] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2240] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2254] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2266] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2289] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2307] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2320] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2331] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2343] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2356] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2368] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2379] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:22:2446] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2721] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2733] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2744] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2762] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2773] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2782] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2792] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:2982] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:3013] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:23:3545] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs:76] - Eureka HTTP Client uses RestTemplate. 
[2025-02-07 15:14:24:3577] [restartedMain] INFO  [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>:60] - Exposing 2 endpoints beneath base path '/actuator' 
[2025-02-07 15:14:24:3623] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create:67] - Setting initial instance status as: STARTING 
[2025-02-07 15:14:24:3640] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:327] - Initializing Eureka in region us-east-1 
[2025-02-07 15:14:24:3642] [restartedMain] INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] - Resolving eureka endpoints via configuration 
[2025-02-07 15:14:24:3652] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:951] - Disable delta property : false 
[2025-02-07 15:14:24:3652] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:952] - Single vip registry refresh property : null 
[2025-02-07 15:14:24:3652] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:953] - Force full registry fetch : false 
[2025-02-07 15:14:24:3652] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:954] - Application is null : false 
[2025-02-07 15:14:24:3652] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:955] - Registered Applications size is zero : true 
[2025-02-07 15:14:24:3652] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:957] - Application version is -1: true 
[2025-02-07 15:14:24:3652] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1041] - Getting all instance registry info from the eureka server 
[2025-02-07 15:14:24:3759] [restartedMain] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on GET request for "http://novabook-eureka-service:8761/eureka/apps/": novabook-eureka-service: nodename nor servname provided, or not known stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://novabook-eureka-service:8761/eureka/apps/": novabook-eureka-service: nodename nor servname provided, or not known
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at store.novabook.front.NovabookFrontApplication.main(NovabookFrontApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.net.UnknownHostException: novabook-eureka-service: nodename nor servname provided, or not known
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 65 more
 
[2025-02-07 15:14:24:3759] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:965] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at store.novabook.front.NovabookFrontApplication.main(NovabookFrontApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
 
[2025-02-07 15:14:24:3759] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:398] - Initial registry fetch from primary servers failed 
[2025-02-07 15:14:24:3760] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:403] - Initial registry fetch from backup servers failed 
[2025-02-07 15:14:24:3760] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1265] - Starting heartbeat executor: renew interval is: 30 
[2025-02-07 15:14:24:3761] [restartedMain] INFO  [com.netflix.discovery.InstanceInfoReplicator.<init>:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4 
[2025-02-07 15:14:24:3763] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:447] - Discovery Client initialized at timestamp 1738908864187 with initial instances count: 0 
[2025-02-07 15:14:24:3770] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register:70] - Registering application NOVABOOK_FRONT with eureka with status UP 
[2025-02-07 15:14:24:3770] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient$3.notify:1296] - Saw local status change event StatusChangeEvent [timestamp=1738908864195, current=UP, previous=STARTING] 
[2025-02-07 15:14:24:3771] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient.register:817] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front: registering service... 
[2025-02-07 15:14:24:3771] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:14:24:3775] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start:243] - Tomcat started on port 8080 (http) with context path '/' 
[2025-02-07 15:14:24:3775] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:150] - Updating port to 8080 
[2025-02-07 15:14:24:3782] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more
 
[2025-02-07 15:14:24:3986] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarted:56] - Started NovabookFrontApplication in 3.845 seconds (process running for 4.312) 
[2025-02-07 15:14:24:4414] [RMI TCP Connection(2)-127.0.0.1] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring DispatcherServlet 'dispatcherServlet' 
[2025-02-07 15:14:24:4415] [RMI TCP Connection(2)-127.0.0.1] INFO  [org.springframework.web.servlet.FrameworkServlet.initServletBean:532] - Initializing Servlet 'dispatcherServlet' 
[2025-02-07 15:14:24:4415] [RMI TCP Connection(3)-127.0.0.1] INFO  [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.connectHostPort:682] - Attempting to connect to: localhost:5672 
[2025-02-07 15:14:24:4416] [RMI TCP Connection(2)-127.0.0.1] INFO  [org.springframework.web.servlet.FrameworkServlet.initServletBean:554] - Completed initialization in 1 ms 
[2025-02-07 15:14:24:4451] [RMI TCP Connection(3)-127.0.0.1] INFO  [org.springframework.amqp.rabbit.connection.AbstractConnectionFactory.createBareConnection:608] - Created new connection: connectionFactory#2bf06cb0:0/SimpleConnection@7d9f625d [delegate=amqp://guest@127.0.0.1:5672/, localPort=62174] 
[2025-02-07 15:14:41:21267] [SpringApplicationShutdownHook] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister:91] - Unregistering application NOVABOOK_FRONT with eureka with status DOWN 
[2025-02-07 15:14:41:21268] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient$3.notify:1296] - Saw local status change event StatusChangeEvent [timestamp=1738908881693, current=DOWN, previous=UP] 
[2025-02-07 15:14:41:21268] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient.register:817] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front: registering service... 
[2025-02-07 15:14:41:21283] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service: nodename nor servname provided, or not known stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service: nodename nor servname provided, or not known
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service: nodename nor servname provided, or not known
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more
 
[2025-02-07 15:14:41:21416] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.shutdown:879] - Shutting down DiscoveryClient ... 
[2025-02-07 15:14:44:24420] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.unregister:915] - Unregistering ... 
[2025-02-07 15:14:44:24427] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on DELETE request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT/172.19.88.38:novabook_front": novabook-eureka-service stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT/172.19.88.38:novabook_front": novabook-eureka-service
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more
 
[2025-02-07 15:14:44:24432] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.shutdown:904] - Completed shut down of DiscoveryClient 
[2025-02-07 15:14:46:514 ] [background-preinit] INFO  [org.hibernate.validator.internal.util.Version.<clinit>:21] - HV000001: Hibernate Validator 8.0.1.Final 
[2025-02-07 15:14:46:535 ] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarting:50] - Starting NovabookFrontApplication using Java 21.0.3 with PID 58931 (/Users/isehui/nhn-academy/supernova-v2/novabook-front/target/classes started by isehui in /Users/isehui/nhn-academy/supernova-v2/novabook-front) 
[2025-02-07 15:14:46:535 ] [restartedMain] INFO  [org.springframework.boot.SpringApplication.logStartupProfileInfo:660] - The following 1 profile is active: "prod" 
[2025-02-07 15:14:46:552 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable 
[2025-02-07 15:14:46:552 ] [restartedMain] INFO  [org.springframework.boot.logging.DeferredLog.logTo:252] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG' 
[2025-02-07 15:14:46:965 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:14:46:966 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:14:46:975 ] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 2 ms. Found 0 Redis repository interfaces. 
[2025-02-07 15:14:47:1165] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:295] - Multiple Spring Data modules found, entering strict repository configuration mode 
[2025-02-07 15:14:47:1165] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:143] - Bootstrapping Spring Data Redis repositories in DEFAULT mode. 
[2025-02-07 15:14:47:1260] [restartedMain] INFO  [org.springframework.data.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:211] - Finished Spring Data repository scanning in 94 ms. Found 4 Redis repository interfaces. 
[2025-02-07 15:14:47:1416] [restartedMain] INFO  [org.springframework.cloud.context.scope.GenericScope.setSerializationId:282] - BeanFactory id=4a6fbfa6-428a-35e7-96be-b1a1aa5de352 
[2025-02-07 15:14:47:1794] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.initialize:111] - Tomcat initialized with port 8080 (http) 
[2025-02-07 15:14:47:1801] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:14:47:1802] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting service [Tomcat] 
[2025-02-07 15:14:47:1802] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting Servlet engine: [Apache Tomcat/10.1.24] 
[2025-02-07 15:14:47:1824] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Initializing Spring embedded WebApplicationContext 
[2025-02-07 15:14:47:1824] [restartedMain] INFO  [org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.prepareWebApplicationContext:296] - Root WebApplicationContext: initialization completed in 1272 ms 
[2025-02-07 15:14:48:2062] [restartedMain] INFO  [org.springframework.boot.devtools.autoconfigure.OptionalLiveReloadServer.startServer:59] - LiveReload server is running on port 35729 
[2025-02-07 15:14:48:2095] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2131] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2148] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2161] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2174] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2187] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2202] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2214] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2225] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2237] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2249] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2263] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2278] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2343] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2628] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2640] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2654] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2669] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2680] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2690] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2700] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2908] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:48:2941] [restartedMain] INFO  [org.springframework.cloud.openfeign.FeignClientFactoryBean.getTarget:468] - For 'gateway-service' URL not provided. Will try picking an instance via load-balancing. 
[2025-02-07 15:14:49:3499] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration.restTemplateDiscoveryClientOptionalArgs:76] - Eureka HTTP Client uses RestTemplate. 
[2025-02-07 15:14:49:3532] [restartedMain] INFO  [org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver.<init>:60] - Exposing 2 endpoints beneath base path '/actuator' 
[2025-02-07 15:14:49:3580] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create:67] - Setting initial instance status as: STARTING 
[2025-02-07 15:14:49:3596] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:327] - Initializing Eureka in region us-east-1 
[2025-02-07 15:14:49:3599] [restartedMain] INFO  [com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver.getClusterEndpoints:43] - Resolving eureka endpoints via configuration 
[2025-02-07 15:14:49:3609] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:951] - Disable delta property : false 
[2025-02-07 15:14:49:3609] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:952] - Single vip registry refresh property : null 
[2025-02-07 15:14:49:3609] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:953] - Force full registry fetch : false 
[2025-02-07 15:14:49:3609] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:954] - Application is null : false 
[2025-02-07 15:14:49:3609] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:955] - Registered Applications size is zero : true 
[2025-02-07 15:14:49:3609] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:957] - Application version is -1: true 
[2025-02-07 15:14:49:3610] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry:1041] - Getting all instance registry info from the eureka server 
[2025-02-07 15:14:49:3727] [restartedMain] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on GET request for "http://novabook-eureka-service:8761/eureka/apps/": novabook-eureka-service: nodename nor servname provided, or not known stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on GET request for "http://novabook-eureka-service:8761/eureka/apps/": novabook-eureka-service: nodename nor servname provided, or not known
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplicationsInternal(RestTemplateEurekaHttpClient.java:145)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.getApplications(RestTemplateEurekaHttpClient.java:135)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at store.novabook.front.NovabookFrontApplication.main(NovabookFrontApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
Caused by: java.net.UnknownHostException: novabook-eureka-service: nodename nor servname provided, or not known
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Native Method)
	at java.base/java.net.Inet6AddressImpl.lookupAllHostAddr(Inet6AddressImpl.java:52)
	at java.base/java.net.InetAddress$PlatformResolver.lookupByName(InetAddress.java:1211)
	at java.base/java.net.InetAddress.getAddressesFromNameService(InetAddress.java:1828)
	at java.base/java.net.InetAddress$NameServiceAddresses.get(InetAddress.java:1139)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 65 more
 
[2025-02-07 15:14:49:3728] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.fetchRegistry:965] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front - was unable to refresh its cache! This periodic background refresh will be retried in 30 seconds. status = Cannot execute request on any known server stacktrace = com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1045)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:958)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:396)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:247)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:242)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:68)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:321)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:140)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:644)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1337)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1167)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:376)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:375)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:179)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:373)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getTargetObject(EurekaRegistration.java:128)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.getEurekaClient(EurekaRegistration.java:116)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:281)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:482)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:184)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:768)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:720)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration$$SpringCGLIB$$0.getEurekaClient(<generated>)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.maybeInitializeClient(EurekaServiceRegistry.java:83)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:66)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.start(EurekaAutoServiceRegistration.java:89)
	at org.springframework.context.support.DefaultLifecycleProcessor.doStart(DefaultLifecycleProcessor.java:288)
	at org.springframework.context.support.DefaultLifecycleProcessor$LifecycleGroup.start(DefaultLifecycleProcessor.java:471)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.context.support.DefaultLifecycleProcessor.startBeans(DefaultLifecycleProcessor.java:260)
	at org.springframework.context.support.DefaultLifecycleProcessor.onRefresh(DefaultLifecycleProcessor.java:205)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:981)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:627)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:335)
	at org.springframework.boot.builder.SpringApplicationBuilder.run(SpringApplicationBuilder.java:149)
	at store.novabook.front.NovabookFrontApplication.main(NovabookFrontApplication.java:14)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:50)
 
[2025-02-07 15:14:49:3728] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:398] - Initial registry fetch from primary servers failed 
[2025-02-07 15:14:49:3729] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:403] - Initial registry fetch from backup servers failed 
[2025-02-07 15:14:49:3729] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.initScheduledTasks:1265] - Starting heartbeat executor: renew interval is: 30 
[2025-02-07 15:14:49:3730] [restartedMain] INFO  [com.netflix.discovery.InstanceInfoReplicator.<init>:60] - InstanceInfoReplicator onDemand update allowed rate per min is 4 
[2025-02-07 15:14:49:3732] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient.<init>:447] - Discovery Client initialized at timestamp 1738908889671 with initial instances count: 0 
[2025-02-07 15:14:49:3735] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register:70] - Registering application NOVABOOK_FRONT with eureka with status UP 
[2025-02-07 15:14:49:3736] [restartedMain] INFO  [com.netflix.discovery.DiscoveryClient$3.notify:1296] - Saw local status change event StatusChangeEvent [timestamp=1738908889675, current=UP, previous=STARTING] 
[2025-02-07 15:14:49:3737] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient.register:817] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front: registering service... 
[2025-02-07 15:14:49:3737] [restartedMain] INFO  [org.apache.juli.logging.DirectJDKLog.log:173] - Starting ProtocolHandler ["http-nio-8080"] 
[2025-02-07 15:14:49:3742] [restartedMain] INFO  [org.springframework.boot.web.embedded.tomcat.TomcatWebServer.start:243] - Tomcat started on port 8080 (http) with context path '/' 
[2025-02-07 15:14:49:3742] [restartedMain] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent:150] - Updating port to 8080 
[2025-02-07 15:14:49:3749] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more
 
[2025-02-07 15:14:49:3973] [restartedMain] INFO  [org.springframework.boot.StartupInfoLogger.logStarted:56] - Started NovabookFrontApplication in 3.848 seconds (process running for 4.224) 
[2025-02-07 15:14:50:4455] [SpringApplicationShutdownHook] INFO  [org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister:91] - Unregistering application NOVABOOK_FRONT with eureka with status DOWN 
[2025-02-07 15:14:50:4455] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient$3.notify:1296] - Saw local status change event StatusChangeEvent [timestamp=1738908890394, current=DOWN, previous=UP] 
[2025-02-07 15:14:50:4456] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.DiscoveryClient.register:817] - DiscoveryClient_NOVABOOK_FRONT/172.19.88.38:novabook_front: registering service... 
[2025-02-07 15:14:50:4469] [DiscoveryClient-InstanceInfoReplicator-0] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on POST request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT": novabook-eureka-service
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.register(RestTemplateEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:820)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 22 more
 
[2025-02-07 15:14:50:4674] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.shutdown:879] - Shutting down DiscoveryClient ... 
[2025-02-07 15:14:53:7677] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.unregister:915] - Unregistering ... 
[2025-02-07 15:14:53:7687] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute:84] - Request execution error. endpoint=DefaultEndpoint{ serviceUrl='http://novabook-eureka-service:8761/eureka/}, exception=I/O error on DELETE request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT/172.19.88.38:novabook_front": novabook-eureka-service stacktrace=org.springframework.web.client.ResourceAccessException: I/O error on DELETE request for "http://novabook-eureka-service:8761/eureka/apps/NOVABOOK_FRONT/172.19.88.38:novabook_front": novabook-eureka-service
	at org.springframework.web.client.RestTemplate.createResourceAccessException(RestTemplate.java:915)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:895)
	at org.springframework.web.client.RestTemplate.execute(RestTemplate.java:790)
	at org.springframework.web.client.RestTemplate.exchange(RestTemplate.java:672)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateEurekaHttpClient.cancel(RestTemplateEurekaHttpClient.java:87)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:121)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:80)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:916)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:892)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMethod.invoke(InitDestroyAnnotationBeanPostProcessor.java:457)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeDestroyMethods(InitDestroyAnnotationBeanPostProcessor.java:415)
	at org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeDestruction(InitDestroyAnnotationBeanPostProcessor.java:239)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:202)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.run(DisposableBeanAdapter.java:195)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.destroy(GenericScope.java:389)
	at org.springframework.cloud.context.scope.GenericScope.destroy(GenericScope.java:136)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:211)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:587)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:559)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:1202)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:520)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:1195)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1186)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1147)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.doClose(ServletWebServerApplicationContext.java:174)
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:1093)
	at org.springframework.boot.SpringApplicationShutdownHook.closeAndWait(SpringApplicationShutdownHook.java:145)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.SpringApplicationShutdownHook.run(SpringApplicationShutdownHook.java:114)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.net.UnknownHostException: novabook-eureka-service
	at java.base/java.net.InetAddress$CachedLookup.get(InetAddress.java:988)
	at java.base/java.net.InetAddress.getAllByName0(InetAddress.java:1818)
	at java.base/java.net.InetAddress.getAllByName(InetAddress.java:1688)
	at org.apache.hc.client5.http.SystemDefaultDnsResolver.resolve(SystemDefaultDnsResolver.java:45)
	at org.apache.hc.client5.http.impl.io.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:144)
	at org.apache.hc.client5.http.impl.io.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:450)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:162)
	at org.apache.hc.client5.http.impl.classic.InternalExecRuntime.connectEndpoint(InternalExecRuntime.java:172)
	at org.apache.hc.client5.http.impl.classic.ConnectExec.execute(ConnectExec.java:142)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ProtocolExec.execute(ProtocolExec.java:192)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.HttpRequestRetryExec.execute(HttpRequestRetryExec.java:113)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.ContentCompressionExec.execute(ContentCompressionExec.java:152)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.RedirectExec.execute(RedirectExec.java:116)
	at org.apache.hc.client5.http.impl.classic.ExecChainElement.execute(ExecChainElement.java:51)
	at org.apache.hc.client5.http.impl.classic.InternalHttpClient.doExecute(InternalHttpClient.java:170)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:87)
	at org.apache.hc.client5.http.impl.classic.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.apache.hc.client5.http.classic.HttpClient.executeOpen(HttpClient.java:183)
	at org.springframework.http.client.HttpComponentsClientHttpRequest.executeInternal(HttpComponentsClientHttpRequest.java:99)
	at org.springframework.http.client.AbstractStreamingClientHttpRequest.executeInternal(AbstractStreamingClientHttpRequest.java:70)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:112)
	at org.springframework.cloud.netflix.eureka.http.RestTemplateTransportClientFactory.lambda$restTemplate$3(RestTemplateTransportClientFactory.java:170)
	at org.springframework.http.client.InterceptingClientHttpRequest$InterceptingRequestExecution.execute(InterceptingClientHttpRequest.java:88)
	at org.springframework.http.client.InterceptingClientHttpRequest.executeInternal(InterceptingClientHttpRequest.java:72)
	at org.springframework.http.client.AbstractBufferingClientHttpRequest.executeInternal(AbstractBufferingClientHttpRequest.java:48)
	at org.springframework.http.client.AbstractClientHttpRequest.execute(AbstractClientHttpRequest.java:66)
	at org.springframework.web.client.RestTemplate.doExecute(RestTemplate.java:889)
	... 38 more
 
[2025-02-07 15:14:53:7691] [SpringApplicationShutdownHook] INFO  [com.netflix.discovery.DiscoveryClient.shutdown:904] - Completed shut down of DiscoveryClient 
